package com.study.servlet_study.test;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.study.servlet_study.config.DBConnectionMgr;
import com.study.servlet_study.entity.Author;
import com.study.servlet_study.entity.Book;
import com.study.servlet_study.entity.Publisher;

public class BookSearchMain {
	public static void main(String[] args) {
		
		// 검색할 도서명을 입력하세요 >>> 글
		
		// 도서명 / 저자명 / 출판사
		
		DBConnectionMgr pool = DBConnectionMgr.getInstance();
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		try {
			con = pool.getConnection();
			String sql = "SELECT \r\n"
					+ "	bt.book_id,\r\n"
					+ "    bt.book_name,\r\n"
					+ "    at.author_id,\r\n"
					+ "    at.author_name,\r\n"
					+ "    pt.publisher_id,\r\n"
					+ "    pt.publisher_name\r\n"
					+ "FROM \r\n"
					+ "	book_tb bt\r\n"
					+ "		left outer join author_tb at on(at.author_id = bt.author_id)\r\n"
					+ "		left outer join publisher_tb pt on(pt.publisher_id = bt.publisher_id)\r\n"
					+ "where \r\n"
					+ "	book_name like '%?%'";
			
			pstmt = con.prepareStatement(sql);
			rs = pstmt.executeQuery();
			
			

			List<Book> bookrList = new ArrayList<>();
			List<Author> authorList = new ArrayList<>();
			List<Publisher> publisherList = new ArrayList<>();
			
			

			while(rs.next()) {
				bookrList.add(Book.builder()
							.bookId(rs.getInt(1))
							.bookName(rs.getString(2)) 
							.build()
							);
			}
			
			
			while(rs.next()) {
				authorList.add(Author.builder()
							.authorId(rs.getInt(1))
							.authorName(rs.getString(2))
							.build());				
			}
			
			while(rs.next()) {
				publisherList.add(Publisher.builder()
							.publisherId(rs.getInt(1))
							.publisherName(rs.getString(2))
							.build());				
			}
			
			

			authorList.forEach(book -> System.out.println(book));

			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			pool.freeConnection(con, pstmt, rs);
		}
		

		
		
		
		
	}
}
